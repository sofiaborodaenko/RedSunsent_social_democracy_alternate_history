title: Return card to hand.
view-if: difficulty <= 0 and last_advisor_action = 0
go-to: root
on-arrival: {!
if (Q.month_actions > 0) {
    Q.month_actions -= 1;
}
// return card to hand
var card = this.state.lastPlayedCard;
card.image = card.cardImage;
if (Q.difficulty >= 0) {
    console.log("printing main", this.state.currentHands['main'])
    this.state.currentHands['main'].push(card);
} else {
    if (add_new_deck == 1) {
        console.log("printing main.main_four", this.state.currentHands['main.main_four'])
        //this.state.currentHands['main.main_four'].push(card);
    } else if (add_new_deck == 2){
        console.log("printing main.main_five", this.state.currentHands['main.main_five'])
        this.state.currentHands['main.main_five'].push(card);
    } else if (add_new_deck == 3){
        console.log("printing main.main_six", this.state.currentHands['main.main_six'])
        this.state.currentHands['main.main_six'].push(card);
    } else {
        console.log("printing main.main_easy", this.state.currentHands['main.main_easy'])
        this.state.currentHands['main.main_easy'].push(card);
    }
}
// reset the timer...
console.log(card.id);

if (Q[card.id + "_timer"]) {
    Q[card.id + "_timer"] = 0;
}
// reduce visit count
if (this.state.visits[card.id]) {
    this.state.visits[card.id] -= 1;
}
!}
